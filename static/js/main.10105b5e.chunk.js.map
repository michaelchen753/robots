{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","id","email","className","src","alt","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","this","setState","Component","App","eventHandler","e","inputValue","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qLAgBeA,EAbF,SAACC,GAAU,IACdC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,GAAIC,EAASH,EAATG,MAChB,OACI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAG,+BAA2BH,EAA3B,qBAAkDI,IAAI,WAC1D,gCACI,6BAAKL,IACL,8BAAIE,EAAJ,cCKLI,EAVE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACCA,EAAOC,KAAI,SAACC,EAAOC,GACpB,OAAO,cAAC,EAAD,CAAMT,GAAKM,EAAOG,GAAGT,GAAID,KAAOO,EAAOG,GAAGV,KAAME,MAASK,EAAOG,GAAGR,OAAaK,EAAOG,GAAGT,UCM1FU,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACG,uBACAA,UAAU,mCACVU,KAAM,SACNC,YAAY,qBACZC,SAAWH,OCAPI,EAPA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAkBC,OAAO,SAAjE,SACIrB,EAAMsB,YCmBHC,E,kDArBX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAO,CACRC,UAAU,GAHC,E,qDAMnB,WACIC,KAAKC,SAAS,CAACF,UAAU,M,oBAG7B,WAAW,IACAA,EAAYC,KAAKF,MAAjBC,SACAH,EAAYI,KAAK1B,MAAjBsB,SACP,OAAGG,EACQ,2DAEAH,M,GAjBSM,aC2CbC,E,kDAtCX,aAAe,IAAD,8BACV,gBAaJC,aAAe,SAACC,GACZ,EAAKJ,SAAS,CACVK,WAAYD,EAAEE,OAAOC,SAdzB,EAAKV,MAAQ,CACTQ,WAAY,GACZxB,OAAQ,IAJF,E,qDAQd,WAAqB,IAAD,OACpB2B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACnB,OAAQ+B,S,oBAQ1C,WAAW,IAAD,EACsBb,KAAKF,MAA3BhB,EADA,EACAA,OAAQwB,EADR,EACQA,WACRQ,EAAiBhC,EAAOiC,QAAO,SAAA/B,GACjC,OAAOA,EAAMT,KAAKyC,cAAcC,SAASX,EAAWU,kBAExD,OAAQlC,EAAOoC,OAEd,sBAAKxC,UAAU,KAAf,UACG,6CACA,cAAC,EAAD,CAAWS,aAAea,KAAKI,eAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAWtB,OAASgC,WANhC,6C,GA1BUZ,aCMHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,MCEdO,IAASC,OACT,cAAC,EAAD,IACIC,SAASC,eAAe,SAK5BX,M","file":"static/js/main.10105b5e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Card = (props) =>{\r\n    const{name, id, email} = props;\r\n    return(\r\n        <div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n            <img src= {`https://robohash.org/${id}.png?size=200x200`} alt='avatar'/>\r\n                <div>\r\n                    <h2>{name}</h2>\r\n                    <p>{email} </p>  \r\n                </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n       { robots.map((robot, i)=> {\r\n        return <Card id ={robots[i].id} name ={robots[i].name} email = {robots[i].email} key ={robots[i].id}/>        \r\n    })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n    \r\n\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n           <input           \r\n           className='pa3 ba b--green bg-lightest-blue' \r\n           type ='search'\r\n           placeholder='Search robots here' \r\n           onChange= {searchChange}\r\n           /> \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'5px solid black',height:'500px',}} >\r\n           {props.children}   \r\n        </div>         \r\n    )}\r\n\r\nexport default Scroll;\r\n","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            hasError: false,\r\n        }\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render () {\r\n        const {hasError} = this.state;\r\n        const {children} = this.props;\r\n        if(hasError) {\r\n            return <h1>There is something wrong!</h1>\r\n        } else {\r\n            return children\r\n        }       \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            inputValue: '',\r\n            robots: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots: users}));\r\n        }\r\n\r\n    eventHandler = (e) =>{\r\n        this.setState({\r\n            inputValue: e.target.value            \r\n        })             \r\n    } \r\n    render () {\r\n        const{robots, inputValue} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(inputValue.toLowerCase()) \r\n        })\r\n        return !robots.length ? \r\n        <h1>Loading</h1>:\r\n         <div className='tc'>\r\n            <h1>RoboFriends</h1>\r\n            <SearchBox searchChange= {this.eventHandler} />\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList  robots= {filteredRobots} />\r\n                </ErrorBoundary>\r\n            </Scroll>\r\n        </div>               \r\n    }    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n<App />\n  , document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}